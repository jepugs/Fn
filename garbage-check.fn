;; this creates loads of garbage

(defn one-garbage ()
  (letfn iota (a b)
    (letfn iter (acc n)
      (if (> n b)
          (reverse acc)
          (iter (cons n acc) (+ n 1))))
    (iter [] a))
  (iota 1 10))

(defn trash-pile (cycles)
  (if (= cycles 1)
      'done
      (do
        (one-garbage)
        (trash-pile (- cycles 1)))))

;(trash-pile 1)

;(one-garbage)


